@charset "UTF-8";
// Sass Mixins
// - - - - - - - - - - - - - - - - - - - - - - - - -

// Responsive container mixin
//
// @param {boolean} $padding
// - - - - - - - - - - - - - - - - - - - - - - - - -
@mixin container($padding: true) {

  @if $padding == true {
    @include pad(0 default 0 default);
  }

  @include outer-container(config-get("breakpoint.tiny"));

  @include media(">small") {
    @include outer-container(config-get("breakpoint.small"));
  }

  @include media(">medium") {
    @include outer-container(config-get("breakpoint.medium"));
  }

  @include media(">large") {
    @include outer-container(config-get("breakpoint.large"));
  }

  @include media(">xlarge") {
    @include outer-container(config-get("breakpoint.xlarge"));
  }
}

// Adds margin to the element.
//
// @param {list} $margin [flex-gutter()] A list of margin value(s) to use.
//                                       Passing `default` in the list will result in using the gutter width as a margin value.
//
// @example scss - Usage
//  .element {
//    @include marg(30px -20px 10px default);
//  }
//
// @example css - CSS Output
//  .element {
//    margin: 30px -20px 10px 2.35765%;
//  }
// - - - - - - - - - - - - - - - - - - - - - - - - -
@mixin marg($margin: flex-gutter()) {
  $margin-list: null;

  @each $value in $margin {
    $value: if($value == 'default', flex-gutter(), $value);
    $margin-list: join($margin-list, $value);
  }

  margin: $margin-list;
}

// Responsive grid mixin
//
// - - - - - - - - - - - - - - - - - - - - - - - - -
@mixin build-grid(){
  @each $name, $width in $breakpoints {
    @media (min-width: $width){
      @for $i from 1 through $grid-columns {
        // span-columns() is a neat.bourbon.io function to generate grid width
        .#{$name}-#{$i} { @include span-columns($i); }
      }
    }
  }
}
